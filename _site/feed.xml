<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">OmarG's Blog</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://omarghader.github.io/feed.xml" />
<link rel="alternate" type="text/html" href="http://omarghader.github.io" />
<updated>2015-11-14T16:44:02+01:00</updated>
<id>http://omarghader.github.io/</id>
<author>
  <name>Omar Ghader</name>
  <uri>http://omarghader.github.io/</uri>
  <email>ghader@etud.insa-toulouse.fr</email>
</author>


  

<entry>
  <title type="html"><![CDATA[Executing R From Java Using JRI Library]]></title>
  <link rel="alternate" type="text/html" href="http://omarghader.github.io/executing-r-from-java-using-jri-library/" />
  <id>http://omarghader.github.io/executing-r-from-java-using-jri-library</id>
  <published>2015-09-03T13:03:09+02:00</published>
  <updated>2015-09-03T13:03:09+02:00</updated>
  <author>
    <name>Omar Ghader</name>
    <uri>http://omarghader.github.io</uri>
    <email>ghader@etud.insa-toulouse.fr</email>
  </author>
  <content type="html">
    &lt;p&gt;R is a very powerful language designed for mathematics and statistics. It became one of the best data analysis tools due to its performance and its syntax simplicity. R can import datasets or generate a csv file with 1 line of code.&lt;/p&gt;

&lt;p&gt;So, It will be very important to use R with one of the most known programming languages : JAVA. Using JRI library, i will show you how to assign variables, run R scripts…. in Java.&lt;/p&gt;

&lt;h3 id=&quot;initializing-r-engine&quot;&gt;Initializing R engine&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;--vanilla&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Rengine&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rengine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Rengine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;double-variable&quot;&gt;Double variable&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;eval(“command”)&lt;/strong&gt; method  will execute the command in R engine.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;rengine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;x=13.5&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rengine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;x&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asDouble&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// output&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// 13.5&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;dataframe&quot;&gt;DataFrame&lt;/h3&gt;
&lt;p&gt;REXP is the default class for the result object. If you want to convert the result to Double, Int, Boolean.. you must use REXP methods like: .asDouble(),.asInt(),asBool() …&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;rengine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;myData=data.frame(x=c(&amp;#39;v&amp;#39;,&amp;#39;d&amp;#39;),y=c(&amp;#39;e&amp;#39;,&amp;#39;f&amp;#39;))&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;REXP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dataFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rengine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;myData&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Vector containing 2 Factors&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asVector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;at&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dataFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asVector&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;at&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asFactor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;at&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// output&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// [VECTOR ([FACTOR {levels=(&amp;quot;d&amp;quot;,&amp;quot;v&amp;quot;),ids=(1,0)}], [FACTOR {levels=(&amp;quot;e&amp;quot;,&amp;quot;f&amp;quot;),ids=(0,1)}])]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// [FACTOR {levels=(&amp;quot;e&amp;quot;,&amp;quot;f&amp;quot;),ids=(0,1)}]&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// f&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;rbool&quot;&gt;RBool&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;RBool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rengine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1==0&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;asBool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// output&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// FALSE&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;running-r-script&quot;&gt;Running R script&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;rengine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;source(\&amp;quot;path/to/your/script\&amp;quot;)&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

    &lt;p&gt;&lt;a href=&quot;http://omarghader.github.io/executing-r-from-java-using-jri-library/&quot;&gt;Executing R From Java Using JRI Library&lt;/a&gt; was originally published by Omar Ghader at &lt;a href=&quot;http://omarghader.github.io&quot;&gt;OmarG's Blog&lt;/a&gt; on September 03, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Docker Tutorial : PhpMyAdmin and MySQL Server]]></title>
  <link rel="alternate" type="text/html" href="http://omarghader.github.io/docker-tutorial-phpmyadmin-and-mysql-server/" />
  <id>http://omarghader.github.io/docker-tutorial-phpmyadmin-and-mysql-server</id>
  <published>2015-08-24T23:57:49+02:00</published>
  <updated>2015-08-24T23:57:49+02:00</updated>
  <author>
    <name>Omar Ghader</name>
    <uri>http://omarghader.github.io</uri>
    <email>ghader@etud.insa-toulouse.fr</email>
  </author>
  <content type="html">
    &lt;p&gt;If you are new to Docker or you are wondering why docker is very popular today, I recommend you to read my previous posts &lt;a href=&quot;http://omarghader.github.io&quot;&gt;Introduction to Docker&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;pull-containers-from-docker-registry&quot;&gt;Pull Containers from Docker registry&lt;/h2&gt;

&lt;h4 id=&quot;searching-for-containers&quot;&gt;Searching for containers&lt;/h4&gt;
&lt;p&gt;Docker have a public registry where you could find images of dockerized application that are ready to use. All information and indications for using container are specified too.&lt;/p&gt;

&lt;p&gt;In this post, I will show you how to connect &lt;strong&gt;PhpMyAdmin&lt;/strong&gt; container  to &lt;strong&gt;MySQL server&lt;/strong&gt; container. First of all, we must pull the images from repository. In order to find the image that you want, you can :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Go to &lt;strong&gt;&lt;a href=&quot;http://hub.docker.com&quot;&gt;Docker Hub&lt;/a&gt;&lt;/strong&gt; and search for the corresponding image&lt;/li&gt;
  &lt;li&gt;Using docker command-line to search : docker search &lt;strong&gt;image&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I recommend you to look at Docker Hub website for the first time. Then, try to understand how the image work by reading author instructions. Now we will pull 2 containers that i chose from Docker hub.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#  Pull containers&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo docker pull mysql/mysql-server
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo docker pull corbinu/docker-phpmyadmin

&lt;span class=&quot;c&quot;&gt;# Verify that images are pulled correctly&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo docker images&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;running-mysql-server-container&quot;&gt;Running MySQL Server container&lt;/h3&gt;

&lt;p&gt;After downloading the image, we must configure and run the container. You’ll notice that a lot of containers is configured by pre-defining ENVIRONNEMENT VARIABLES before running the application. For the first time, i agree that it’s not easy to manipulate containers and to understand how it runs. But later, i think that docker will be your best friend ^^.&lt;/p&gt;

&lt;p&gt;Docker command line have many options&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run --name name-of-container -e &lt;span class=&quot;nv&quot;&gt;YOUR_ENV_VARIABLE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;var1 -p host-port:container-port name-of-image &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;-e : to indicate the declaration of Environnemnt variable inside the container&lt;/li&gt;
  &lt;li&gt;-d : run the container in background&lt;/li&gt;
  &lt;li&gt;-p : bind container port to host port&lt;/li&gt;
  &lt;li&gt;–name : to name the container generated&lt;/li&gt;
  &lt;li&gt;–link : link 2 containers together.&lt;/li&gt;
  &lt;li&gt;command : optionnally we can add a command to be executed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, let’s run mysql container now :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo docker run --name mysql-container -e &lt;span class=&quot;nv&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mypassword -d mysql/mysql-server&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;running-phpmyadmin-container&quot;&gt;Running PhpMyAdmin container&lt;/h3&gt;
&lt;p&gt;Phpmyadmin must point to MySQL Server. So that we must link both containers by adding the option : –link name-of-container:name-of-imag.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run -d --link mysql-container:mysql --name phpmyadmin -e &lt;span class=&quot;nv&quot;&gt;MYSQL_USERNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;root  -p 80:80 corbinu/docker-phpmyadmin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;testing-connectivity&quot;&gt;Testing connectivity&lt;/h2&gt;

&lt;p&gt;Now go to your browser , tap &lt;a href=&quot;http://localhost:80&quot;&gt;http://localhost:80&lt;/a&gt; and Voilà your containers work fine.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://omarghader.github.io/docker-tutorial-phpmyadmin-and-mysql-server/&quot;&gt;Docker Tutorial : PhpMyAdmin and MySQL Server&lt;/a&gt; was originally published by Omar Ghader at &lt;a href=&quot;http://omarghader.github.io&quot;&gt;OmarG's Blog&lt;/a&gt; on August 24, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Introduction to Docker]]></title>
  <link rel="alternate" type="text/html" href="http://omarghader.github.io/introduction-to-docker/" />
  <id>http://omarghader.github.io/introduction-to-docker</id>
  <published>2015-08-23T15:14:25+02:00</published>
  <updated>2015-08-23T15:14:25+02:00</updated>
  <author>
    <name>Omar Ghader</name>
    <uri>http://omarghader.github.io</uri>
    <email>ghader@etud.insa-toulouse.fr</email>
  </author>
  <content type="html">
    &lt;p&gt;Docker is a new open-source project that makes deployment of applications easier. The idea of this technology is very simple : “the application runs inside a software container. This container is acting like a mini Operating System”. Basics are very similar to Virtual machine : An OS is running independently of host’s OS. Networking is working using bridges… 
Docker is using 2 terms : image and container:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;An image is a packaged application that is not running.&lt;/li&gt;
  &lt;li&gt;A container is an instance of image. It can be a running or stopped application.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition, Docker have a lot of advantages. let’s discover them!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://blog.docker.com/wp-content/uploads/2013/08/KuDr42X_ITXghJhSInDZekNEF0jLt3NeVxtRye3tqco.png&quot; alt=&quot;Docker&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;docker-advantages&quot;&gt;Docker Advantages&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Lightweight&lt;/strong&gt; comparing to normal Virtual machine. You can run many containers in parallel without having memory problems.&lt;/li&gt;
  &lt;li&gt;Docker can run on &lt;strong&gt;most operating systems&lt;/strong&gt;. Containers running have no dependencies with host’s OS. So it simpifies developer’s tasks by exporting 1 application for all OS instead of 1 application for each specific operating System.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Deployment is easier&lt;/strong&gt; using docker. Once your Docker image is built, your applications can be exported without any dependenncies. So that , you could gain a lot of time.&lt;/li&gt;
  &lt;li&gt;Docker have a large community. You can find the answers to all your questions and wonders on : StackOverflow, Github issues …&lt;/li&gt;
  &lt;li&gt;Docker have a public repository where you can find all applications that you want easily, how to configure it and how the image was built. Per example: you could fine Apache server image, or MySQL Server..&lt;/li&gt;
  &lt;li&gt;Docker is used today by very well know companies such as : Microsoft (that is a partner of Docker too), eBay, Baidu, Groupon… So that’s why you should have the curiousity about Docker and to give a try.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Scalability&lt;/strong&gt; : docker offer the possibility to make your application scalable by running many instances1 of the same image.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-to-install-docker&quot;&gt;How to Install Docker&lt;/h2&gt;

&lt;p&gt;For Ubuntu , run this command in your terminal :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;curl -sSL https://get.docker.com/ &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For other OS , please refer to &lt;a href=&quot;https://docs.docker.com/installation/&quot;&gt;docker documentation&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;verify-docker-is-installed-correctly&quot;&gt;Verify Docker is installed correctly&lt;/h4&gt;
&lt;p&gt;Run this command in your terminal :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo docker run hello-world&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;run-docker-as-non-sudo-user&quot;&gt;Run docker as non-sudo user&lt;/h4&gt;
&lt;p&gt;Docker is used as root normally. But you can still use docker as non-root user. In order to do that, run this command in your terminal :&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo usermod -aG docker &lt;span class=&quot;nv&quot;&gt;$USER&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;but-how-to-use-docker-&quot;&gt;But How to use Docker ?&lt;/h3&gt;

&lt;p&gt;In my next tutorial, we will manipulate docker containers. and I will show you how we connect a PhpMyAdmin to MySQL Server, both working on different docker containers on the same host.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://omarghader.github.io/introduction-to-docker/&quot;&gt;Introduction to Docker&lt;/a&gt; was originally published by Omar Ghader at &lt;a href=&quot;http://omarghader.github.io&quot;&gt;OmarG's Blog&lt;/a&gt; on August 23, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[My First Post]]></title>
  <link rel="alternate" type="text/html" href="http://omarghader.github.io/my-first-post/" />
  <id>http://omarghader.github.io/my-first-post</id>
  <published>2015-08-22T21:08:08+02:00</published>
  <updated>2015-08-22T21:08:08+02:00</updated>
  <author>
    <name>Omar Ghader</name>
    <uri>http://omarghader.github.io</uri>
    <email>ghader@etud.insa-toulouse.fr</email>
  </author>
  <content type="html">
    &lt;p&gt;Hi, This is my first post.
I’m Computer and Communication Engineering student at INSA Toulouse.
I’m interested in programming in : Java , C , Go lang and Javascript…
Also, I’m interested in Android development , Web apps, and Security DevOps, and Linux Administration.
I would like to use this blog to share information about  computer science.&lt;/p&gt;

&lt;h3 id=&quot;android-development&quot;&gt;Android development&lt;/h3&gt;
&lt;p&gt;My Future posts will be related to these subjects.
My tutorials will be focused on simplifying and coding android applications efficiently.
In addition to some tips and tricks to simplify tasks.
Some libraries will be introduced and used like volley…&lt;/p&gt;

&lt;h3 id=&quot;security-devops&quot;&gt;Security DevOps&lt;/h3&gt;
&lt;p&gt;DevOps is a new term that combines development , operations throughout all stages of the development lifecycle.
DevOps’ goal is the automatization of deployment in an efficient way.
Provisionning is a part of DevOps. Most known provisionning tools are: Puppet, SaltStack , Chef , Ansible …
I will discuss some of these tools and the way to use it.&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;http://omarghader.github.io/my-first-post/&quot;&gt;My First Post&lt;/a&gt; was originally published by Omar Ghader at &lt;a href=&quot;http://omarghader.github.io&quot;&gt;OmarG's Blog&lt;/a&gt; on August 22, 2015.&lt;/p&gt;
  </content>
</entry>

</feed>

<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>html on</title><link>https://omarghader.github.io/tags/html/</link><description>Recent content in html on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Fri, 17 Apr 2020 08:57:23 +0200</lastBuildDate><atom:link href="https://omarghader.github.io/tags/html/index.xml" rel="self" type="application/rss+xml"/><item><title>Align div to the bottom of the page in 3 steps</title><link>https://omarghader.github.io/align-div-to-the-bottom-of-the-page-in-3-steps/</link><pubDate>Fri, 17 Apr 2020 08:57:23 +0200</pubDate><guid>https://omarghader.github.io/align-div-to-the-bottom-of-the-page-in-3-steps/</guid><description>Aligning an element at the bottom of the page is a very common issue in web development and css. You will find the best practices for aligning the div at the bottom of the page.
Step 1 : Setting the parent position to relative. If you want to align a div at the bottom of a parent div, the parent should have a position : relative.
&amp;lt;style&amp;gt; .parent{ position : relative; /* Set parent position to relative */ } &amp;lt;/style&amp;gt; &amp;lt;div class=&amp;#34;parent&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;bottom&amp;#34;&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; Step 2 : Setting the div position to absolute.</description></item><item><title>Srcset Tutorial : Responsive Image HTML</title><link>https://omarghader.github.io/srcset-tutorial-responsive-image-html/</link><pubDate>Thu, 16 Apr 2020 08:57:23 +0200</pubDate><guid>https://omarghader.github.io/srcset-tutorial-responsive-image-html/</guid><description>Responsive images are images that adapt to the width of screen to fit it perfectly and to improve the performance of the site.
If you like this post feel free to share it with your colleagues.
Why reponsive images? I&amp;rsquo;m pretty sure that, until now, all the images you have inserted in your websites looks like this:
&amp;lt;img src=&amp;#34;imageURL&amp;#34; width=&amp;#34;360px&amp;#34; height=&amp;#34;auto&amp;#34; max-width=&amp;#34;100vw&amp;#34;&amp;gt; Let&amp;rsquo;s say the image has 1024px width : 768px height.</description></item><item><title>How to create a sliding menu bar</title><link>https://omarghader.github.io/how-to-create-a-sliding-menu-bar/</link><pubDate>Thu, 09 Apr 2020 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/how-to-create-a-sliding-menu-bar/</guid><description>In this tutorial, I will show you how to create a sliding left panel easily using css and javascript only.
&amp;lt;div class=&amp;#34;container&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;slider open&amp;#34;&amp;gt;Left Panel&amp;lt;/div&amp;gt; &amp;lt;button class=&amp;#34;toggle-button&amp;#34; onclick=&amp;#34;toggleSlider()&amp;#34;&amp;gt;&amp;lt; Close&amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; function toggleSlider () { var slider = document.querySelector(&amp;#39;.slider&amp;#39;) var buttonSlider = document.querySelector(&amp;#39;.toggle-button&amp;#39;) if (!slider.classList.contains(&amp;#39;open&amp;#39;)){ slider.classList.add(&amp;#39;open&amp;#39;) buttonSlider.innerHTML = &amp;#39;&amp;lt; Close&amp;#39; } else { slider.classList.remove(&amp;#39;open&amp;#39;) buttonSlider.innerHTML = &amp;#39;&amp;gt; Open&amp;#39; } } &amp;lt;/script&amp;gt; &amp;lt;style&amp;gt; .container{ position: relative; width: 400px; height: 400px; background: #145677; } .</description></item><item><title>How to center a element inside div with css</title><link>https://omarghader.github.io/how-to-center-a-element-inside-div-with-css/</link><pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/how-to-center-a-element-inside-div-with-css/</guid><description>Centering elements inside div is a common problem in web development. In this post I will explain a very easy solution for this that works always.
Before centering Let&amp;rsquo;s say we have those 2 containers.
&amp;lt;div class=&amp;#34;container&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;center-element&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;style&amp;gt; .container { width: 300px; height: 300px; background: red; } .center-element{ width: 200px; height: 200px; background: yellow; } &amp;lt;/style&amp;gt; Centering the element The easiest way is to use the flex display that handles the centering in very good way.</description></item></channel></rss>
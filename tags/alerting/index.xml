<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>alerting on</title><link>https://omarghader.github.io/tags/alerting/</link><description>Recent content in alerting on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 17 Jun 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://omarghader.github.io/tags/alerting/index.xml" rel="self" type="application/rss+xml"/><item><title>Monitoring Disk Space Across Servers Using Node Exporter and Prometheus</title><link>https://omarghader.github.io/monitor-disk-space-node-exporter-prometheus-grafana/</link><pubDate>Tue, 17 Jun 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/monitor-disk-space-node-exporter-prometheus-grafana/</guid><description>Monitoring Disk Space Across Servers Using Node Exporter and Prometheus Ever had that sinking feeling when your server runs out of disk space at 3 AM? I have—more times than I’d like to admit. After one too many midnight emergencies, I decided to automate disk space monitoring using Prometheus, Node Exporter, and Grafana. Here’s how you can set it up too, complete with alerts and pretty dashboards to keep your sanity intact.</description></item><item><title>Prometheus Anomaly detection: Z-Score in PromQL</title><link>https://omarghader.github.io/prometheus-anomaly-detection-z-score-in-promql/</link><pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/prometheus-anomaly-detection-z-score-in-promql/</guid><description>Monitoring HTTP request rates is one of the most basic yet essential tasks in observability. A sudden spike might indicate a traffic surge or even a DDoS attack, while a sudden drop could signal a backend failure. Static thresholds work, but they often miss subtle patterns or raise too many false alarms. A better way is to use statistical anomaly detection—specifically Z-score based alerts in Prometheus.
In this post, we’ll walk through how to set up a Z-score PromQL alert to detect anomalies in HTTP request rates using only Prometheus and native PromQL.</description></item><item><title>Grafana 9 Alert : How to customize alert message</title><link>https://omarghader.github.io/grafana-alerting-custom-message/</link><pubDate>Sat, 05 Nov 2022 11:09:41 +0100</pubDate><guid>https://omarghader.github.io/grafana-alerting-custom-message/</guid><description>Grafana added the alert feature recently and it&amp;rsquo;s now released with the Grafana 9. That&amp;rsquo;s a great feature for the people who don&amp;rsquo;t want to set a proper alermanager and to configure it. I&amp;rsquo;ve took the time to explore the alert and play with it. Let&amp;rsquo;s see how it works!
Deploy grafana and prometheus With the docker-compose file below run the grafana and prometheus docker-compose up -d.
# docker-compose.yml file version: &amp;#34;3.</description></item></channel></rss>
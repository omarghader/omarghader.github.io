<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>automation on</title><link>https://omarghader.github.io/tags/automation/</link><description>Recent content in automation on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 09 Sep 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://omarghader.github.io/tags/automation/index.xml" rel="self" type="application/rss+xml"/><item><title>Turn ESP32 Into a BLE Beacon Scanner for Presence Detection in Home Assistant</title><link>https://omarghader.github.io/esp32-ble-beacon-scanner-presence-detection-home-assistant/</link><pubDate>Tue, 09 Sep 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/esp32-ble-beacon-scanner-presence-detection-home-assistant/</guid><description>Before we begin: This guide assumes you have Home Assistant already set up and are comfortable with basic ESPHome configurations. I&amp;rsquo;ve tried nearly every presence detection method in my smart home journey - from WiFi-based tracking that drained my phone battery to GPS solutions that were anything but reliable indoors. That&amp;rsquo;s when I discovered the magic of BLE beacon scanning with ESP32 for room-level presence detection. It&amp;rsquo;s been a game-changer for my home automations, and today I&amp;rsquo;ll show you exactly how to set it up.</description></item><item><title>Control a Smart Fan with ESP32 and Home Assistant Using Temperature Triggers</title><link>https://omarghader.github.io/control-smart-fan-esp32-home-assistant-temperature-triggers/</link><pubDate>Sat, 30 Aug 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/control-smart-fan-esp32-home-assistant-temperature-triggers/</guid><description>I&amp;rsquo;ve always been fascinated with making my home smarter, especially when it comes to energy efficiency and comfort. There&amp;rsquo;s something deeply satisfying about having your home respond to environmental conditions without lifting a finger. In this tutorial, I&amp;rsquo;ll show you how I built a system that automatically controls a fan based on room temperature using an ESP32 and Home Assistant.
Why I Built This System Living in a climate with hot summers, I found myself constantly adjusting fans throughout the day.</description></item><item><title>Control RGB LEDs with ESP32 and Home Assistant Automations</title><link>https://omarghader.github.io/esp32-rgb-leds-home-assistant-automation/</link><pubDate>Tue, 08 Jul 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/esp32-rgb-leds-home-assistant-automation/</guid><description>Control RGB LEDs with ESP32 and Home Assistant Automations Ever wanted to add some pizzazz to your smart home with colorful, dynamic lighting? I recently tackled this project myself—using an ESP32 to control addressable RGB LEDs and integrating them seamlessly into Home Assistant. The result? A lighting setup that responds to automations, time of day, and even sensor inputs. Here’s how you can do it too.
Why This Project? Addressable RGB LEDs (like WS2812B strips) are incredibly versatile.</description></item><item><title>Voice-Controlling Your Home with ESP32 and Home Assistant via Google Assistant</title><link>https://omarghader.github.io/voice-control-esp32-home-assistant-google-assistant/</link><pubDate>Tue, 29 Apr 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/voice-control-esp32-home-assistant-google-assistant/</guid><description>Voice-Controlling Your Home with ESP32 and Home Assistant via Google Assistant Ever wished you could turn off the lights without lifting a finger—or even getting out of bed? I certainly have, especially on those lazy Sunday mornings. That’s why I set out to integrate my ESP32-based smart devices with Home Assistant and Google Assistant, enabling voice control for my entire home. In this guide, I’ll walk you through the process step by step, sharing the pitfalls I encountered (and how to avoid them) along the way.</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docker on</title><link>https://omarghader.github.io/tags/docker/</link><description>Recent content in Docker on</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Wed, 01 May 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://omarghader.github.io/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Monitor your applications easily with Grafana and Prometheus</title><link>https://omarghader.github.io/monitor-your-applications-easily-with-grafana-and-prometheus/</link><pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/monitor-your-applications-easily-with-grafana-and-prometheus/</guid><description>&lt;h2 id="1-what-is-prometheus--grafana">1. What is Prometheus &amp;amp; Grafana?&lt;/h2>
&lt;ul>
&lt;li>Prometheus is a monitoring system which collects metrics from applications easily.&lt;/li>
&lt;li>Grafana is a user-friendly visualization project which transforms the metrics collected before into amazing charts.&lt;/li>
&lt;/ul>
&lt;p>In this article, you will learn how to connect prometheus to grafana using a docker compose file.&lt;/p>
&lt;h2 id="2-requirements">2. Requirements&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://omarghader.github.io/introduction-to-docker/">Install docker&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://omarghader.github.io/docker-compose-tutorial/">Install docker compose&lt;/a>&lt;/li>
&lt;li>Golang &amp;gt;= 1.08&lt;/li>
&lt;/ul>
&lt;h2 id="3-create-your-application">3. Create your application&lt;/h2>
&lt;p>If you want to get metrics from your application, the first step is to add prometheus to your application code. In this tutorial, we will use the example written on &lt;a href="https://prometheus.io/docs/guides/go-application/">prometheus docs&lt;/a>.&lt;/p></description></item><item><title>Configuring Node js on Jenkins using docker</title><link>https://omarghader.github.io/jenkins-nodejs-configuration/</link><pubDate>Wed, 22 Aug 2018 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/jenkins-nodejs-configuration/</guid><description>&lt;p>Jenkins is a devops tool for continuous intergration.&lt;/p>
&lt;h2 id="install-jenkins">Install jenkins&lt;/h2>
&lt;p>Requirements for this tutorial :&lt;/p>
&lt;ul>
&lt;li>Docker&lt;/li>
&lt;li>Docker compose&lt;/li>
&lt;/ul>
&lt;p>We will user docker compose to configure jenkins docker container:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">version&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;3.5&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">services&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">jenkins&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;jenkins/jenkins:lts&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">container_name&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;jenkins&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">restart&lt;/span>: &lt;span style="color:#ae81ff">always&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ports&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#39;8080:8080&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e6db74">&amp;#39;50000:50000&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">jenkins-data:/etc/gitlab&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">/var/run/docker.sock:/var/run/docker.sock&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">volumes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">jenkins-data&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">jenkins-data&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then, run the command :&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ docker-compose up -d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="run-jenkins">Run Jenkins&lt;/h2>
&lt;p>Once you had run the docker compose file, test that your jenkins is running by opening this url on your browser &lt;a href="http://localhost:8080">http://localhost:8080&lt;/a>&lt;/p></description></item><item><title>Docker Compose Tutorial</title><link>https://omarghader.github.io/docker-compose-tutorial/</link><pubDate>Wed, 20 Dec 2017 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/docker-compose-tutorial/</guid><description>&lt;p>If you are tired of configuring your docker containers every time you want to run it, docker compose is the solution. Docker compose is a tool that will read a configuration file, and will translate it to docker command easily.&lt;/p>
&lt;blockquote>
&lt;p>If you like this article, leave a comment and share it with your friends :)&lt;/p>&lt;/blockquote>
&lt;h2 id="requirement">Requirement&lt;/h2>
&lt;p>For this tutorial, you need a linux machine. I am using an &lt;a onclick="gtag('event', 'aliexpress', {'event_category': 'click','event_label': 'orangepi'})" href="https://s.click.aliexpress.com/e/_DmzBfXl" target="_blank">Orange pi &lt;/a> server because it is very performant and affordable.&lt;/p></description></item><item><title>Introduction to Docker</title><link>https://omarghader.github.io/introduction-to-docker/</link><pubDate>Sun, 23 Aug 2015 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/introduction-to-docker/</guid><description>&lt;p>Docker is a new open-source project that makes deployment of applications easier. The idea of this technology is very simple : &amp;ldquo;the application runs inside a software container. This container is acting like a mini Operating System&amp;rdquo;. Basics are very similar to Virtual machine : An OS is running independently of host&amp;rsquo;s OS. Networking is working using bridges&amp;hellip;
Docker is using 2 terms : image and container:&lt;/p>
&lt;ul>
&lt;li>An image is a packaged application that is not running.&lt;/li>
&lt;li>A container is an instance of image. It can be a running or stopped application.&lt;/li>
&lt;/ul>
&lt;p>In addition, Docker have a lot of advantages. let&amp;rsquo;s discover them!&lt;/p></description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>promql on</title><link>https://omarghader.github.io/tags/promql/</link><description>Recent content in promql on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 12 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://omarghader.github.io/tags/promql/index.xml" rel="self" type="application/rss+xml"/><item><title>Using PromQL to Analyze CPU, Memory, and Network Metrics Effectively</title><link>https://omarghader.github.io/promql-cpu-memory-network-metrics-tutorial/</link><pubDate>Tue, 12 Aug 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/promql-cpu-memory-network-metrics-tutorial/</guid><description>Using PromQL to Analyze CPU, Memory, and Network Metrics Effectively If you’ve ever stared at a Grafana dashboard wondering why your server’s CPU is spiking like a caffeinated squirrel, you’re not alone. Prometheus and PromQL are my go-to tools for making sense of infrastructure metrics—once you get the hang of them, they’re like having X-ray vision for your systems.
In this guide, I’ll walk you through writing effective PromQL queries to monitor CPU, memory, and network performance.</description></item><item><title>Prometheus Anomaly detection: Z-Score in PromQL</title><link>https://omarghader.github.io/prometheus-anomaly-detection-z-score-in-promql/</link><pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/prometheus-anomaly-detection-z-score-in-promql/</guid><description>Monitoring HTTP request rates is one of the most basic yet essential tasks in observability. A sudden spike might indicate a traffic surge or even a DDoS attack, while a sudden drop could signal a backend failure. Static thresholds work, but they often miss subtle patterns or raise too many false alarms. A better way is to use statistical anomaly detection—specifically Z-score based alerts in Prometheus.
In this post, we’ll walk through how to set up a Z-score PromQL alert to detect anomalies in HTTP request rates using only Prometheus and native PromQL.</description></item></channel></rss>
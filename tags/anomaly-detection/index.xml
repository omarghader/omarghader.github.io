<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Anomaly Detection on</title><link>https://omarghader.github.io/tags/anomaly-detection/</link><description>Recent content in Anomaly Detection on</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Thu, 10 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://omarghader.github.io/tags/anomaly-detection/index.xml" rel="self" type="application/rss+xml"/><item><title>Detect HTTP Traffic Anomalies in Prometheus Using Z-Score-Based PromQL Alerts</title><link>https://omarghader.github.io/detect-http-traffic-anomalies-in-prometheus-using-z-score-based-promql-alerts/</link><pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/detect-http-traffic-anomalies-in-prometheus-using-z-score-based-promql-alerts/</guid><description>&lt;p>Monitoring HTTP request rates is one of the most basic yet essential tasks in observability. A sudden spike might indicate a traffic surge or even a DDoS attack, while a sudden drop could signal a backend failure. Static thresholds work, but they often miss subtle patterns or raise too many false alarms. A better way is to use statistical anomaly detection—specifically Z-score based alerts in Prometheus.&lt;/p>
&lt;p>In this post, we’ll walk through how to set up a Z-score PromQL alert to detect anomalies in HTTP request rates using only Prometheus and native PromQL.&lt;/p></description></item></channel></rss>
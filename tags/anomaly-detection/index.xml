<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>anomaly detection on</title><link>https://omarghader.github.io/tags/anomaly-detection/</link><description>Recent content in anomaly detection on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 02 Sep 2025 08:00:00 +0100</lastBuildDate><atom:link href="https://omarghader.github.io/tags/anomaly-detection/index.xml" rel="self" type="application/rss+xml"/><item><title>Detect Outliers in Your Metrics: A Practical Guide to Grafana Machine Learning</title><link>https://omarghader.github.io/grafana-machine-learning-anomaly-detection-tutorial/</link><pubDate>Tue, 02 Sep 2025 08:00:00 +0100</pubDate><guid>https://omarghader.github.io/grafana-machine-learning-anomaly-detection-tutorial/</guid><description>I’ve always been the kind of person who stares at a Grafana dashboard, watching a squiggly line, and wondering, “Is that dip normal? Should I be worried?” For years, my answer was to set up a basic threshold alert. If CPU usage goes above 90%, page someone. But what about the weird, subtle stuff? The slow creep of memory leakage or the sudden, inexplicable drop in request rate that doesn&amp;rsquo;t cross any static line but just feels… off?</description></item><item><title>Prometheus Anomaly detection: Z-Score in PromQL</title><link>https://omarghader.github.io/prometheus-anomaly-detection-z-score-in-promql/</link><pubDate>Thu, 10 Apr 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/prometheus-anomaly-detection-z-score-in-promql/</guid><description>Monitoring HTTP request rates is one of the most basic yet essential tasks in observability. A sudden spike might indicate a traffic surge or even a DDoS attack, while a sudden drop could signal a backend failure. Static thresholds work, but they often miss subtle patterns or raise too many false alarms. A better way is to use statistical anomaly detection—specifically Z-score based alerts in Prometheus.
In this post, we’ll walk through how to set up a Z-score PromQL alert to detect anomalies in HTTP request rates using only Prometheus and native PromQL.</description></item></channel></rss>
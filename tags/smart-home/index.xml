<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>smart home on</title><link>https://omarghader.github.io/tags/smart-home/</link><description>Recent content in smart home on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 07 Oct 2025 08:00:00 +0100</lastBuildDate><atom:link href="https://omarghader.github.io/tags/smart-home/index.xml" rel="self" type="application/rss+xml"/><item><title>Build a Room Occupancy Tracker with ESP32 and Ultrasonic Sensors</title><link>https://omarghader.github.io/esp32-ultrasonic-room-occupancy-tracker/</link><pubDate>Tue, 07 Oct 2025 08:00:00 +0100</pubDate><guid>https://omarghader.github.io/esp32-ultrasonic-room-occupancy-tracker/</guid><description>I&amp;rsquo;ve been tinkering with smart home automation for years, always looking for clever ways to make my home more responsive. Commercial room occupancy sensors work fine, but they&amp;rsquo;re expensive and often limited in functionality. After one too many instances of my smart lights turning off while I was still reading in my favorite armchair, I decided to build my own room occupancy tracker using an ESP32 and ultrasonic sensors.
The beauty of this approach?</description></item><item><title>Visualizing Time Series Data Using Grafana’s Transform and Threshold Tools</title><link>https://omarghader.github.io/visualizing-time-series-data-grafana-transform-threshold-tools/</link><pubDate>Tue, 16 Sep 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/visualizing-time-series-data-grafana-transform-threshold-tools/</guid><description>I&amp;rsquo;ve been staring at Grafana dashboards for years now—first while monitoring complex cloud infrastructure, and more recently to keep tabs on my increasingly smart (and sometimes overly opinionated) home. There&amp;rsquo;s a particular frustration that comes with a dashboard that shows data but doesn&amp;rsquo;t tell a story. You know the one: a tangled mess of lines on a graph, all in the same color, leaving you squinting and asking, &amp;ldquo;Okay, but is this good or bad?</description></item><item><title>Control a Smart Fan with ESP32 and Home Assistant Using Temperature Triggers</title><link>https://omarghader.github.io/control-smart-fan-esp32-home-assistant-temperature-triggers/</link><pubDate>Sat, 30 Aug 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/control-smart-fan-esp32-home-assistant-temperature-triggers/</guid><description>I&amp;rsquo;ve always been fascinated with making my home smarter, especially when it comes to energy efficiency and comfort. There&amp;rsquo;s something deeply satisfying about having your home respond to environmental conditions without lifting a finger. In this tutorial, I&amp;rsquo;ll show you how I built a system that automatically controls a fan based on room temperature using an ESP32 and Home Assistant.
Why I Built This System Living in a climate with hot summers, I found myself constantly adjusting fans throughout the day.</description></item><item><title>Automating Window Blinds with ESP32 Servo Motor and Home Assistant</title><link>https://omarghader.github.io/automate-window-blinds-esp32-servo-home-assistant/</link><pubDate>Tue, 19 Aug 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/automate-window-blinds-esp32-servo-home-assistant/</guid><description>I&amp;rsquo;ve always been fascinated with the idea of waking up to natural sunlight instead of a blaring alarm clock. But as someone who also values sleeping in on weekends, I needed a solution that could give me the best of both worlds. That&amp;rsquo;s when I decided to automate my window blinds with an ESP32 and servo motors, integrating everything seamlessly with Home Assistant.
After a few prototypes (and one slightly mangled blind slat), I&amp;rsquo;ve perfected a system that opens my blinds based on either time schedules or ambient light conditions.</description></item><item><title>Control RGB LEDs with ESP32 and Home Assistant Automations</title><link>https://omarghader.github.io/esp32-rgb-leds-home-assistant-automation/</link><pubDate>Tue, 08 Jul 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/esp32-rgb-leds-home-assistant-automation/</guid><description>Control RGB LEDs with ESP32 and Home Assistant Automations Ever wanted to add some pizzazz to your smart home with colorful, dynamic lighting? I recently tackled this project myself—using an ESP32 to control addressable RGB LEDs and integrating them seamlessly into Home Assistant. The result? A lighting setup that responds to automations, time of day, and even sensor inputs. Here’s how you can do it too.
Why This Project? Addressable RGB LEDs (like WS2812B strips) are incredibly versatile.</description></item><item><title>ESP32 + OLED Display: Display Weather from Home Assistant</title><link>https://omarghader.github.io/esp32-oled-display-weather-home-assistant/</link><pubDate>Tue, 20 May 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/esp32-oled-display-weather-home-assistant/</guid><description>ESP32 + OLED Display: Display Weather from Home Assistant Ever wanted a sleek, always-on display showing the current weather right from your Home Assistant dashboard? I did—and after some tinkering, I built one using an ESP32 and a tiny OLED screen. In this guide, I’ll walk you through the process, sharing pitfalls I encountered (like why my first attempt showed gibberish instead of temperatures) and how to avoid them.
Why This Project?</description></item><item><title>Automate Your Curtains with a Smart Tuya Roller Chain Motor: A Step-by-Step Guide</title><link>https://omarghader.github.io/automate-curtains-tuya-smart-roller-chain-motor-guide/</link><pubDate>Sat, 03 May 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/automate-curtains-tuya-smart-roller-chain-motor-guide/</guid><description>Automate Your Curtains with a Smart Tuya Curtain Roller Chain Motor Ever wished your curtains could open and close on their own? Maybe you’re tired of fumbling with cords in the morning or want to impress your friends with a &amp;ldquo;Hey Google, open the curtains&amp;rdquo; moment. Whatever your reason, automating your curtains with a Tuya Smart Curtain Roller Chain Motor is easier than you think. Here’s how I did it—and how you can too.</description></item><item><title>Voice-Controlling Your Home with ESP32 and Home Assistant via Google Assistant</title><link>https://omarghader.github.io/voice-control-esp32-home-assistant-google-assistant/</link><pubDate>Tue, 29 Apr 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/voice-control-esp32-home-assistant-google-assistant/</guid><description>Voice-Controlling Your Home with ESP32 and Home Assistant via Google Assistant Ever wished you could turn off the lights without lifting a finger—or even getting out of bed? I certainly have, especially on those lazy Sunday mornings. That’s why I set out to integrate my ESP32-based smart devices with Home Assistant and Google Assistant, enabling voice control for my entire home. In this guide, I’ll walk you through the process step by step, sharing the pitfalls I encountered (and how to avoid them) along the way.</description></item><item><title>Track Your Electricity Consumption with Shelly Pro 2PM: Advantages and Home Assistant Integration</title><link>https://omarghader.github.io/track-electricity-consumption-shelly-pro-2pm-home-assistant/</link><pubDate>Fri, 25 Apr 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/track-electricity-consumption-shelly-pro-2pm-home-assistant/</guid><description>Track Your Electricity Consumption with Shelly Pro 2PM: Advantages and Home Assistant Integration Ever stared at your electricity bill and wondered, &amp;ldquo;How did I use that much power?&amp;quot; I certainly have. That’s why I decided to take control by monitoring my home’s energy consumption in real-time using the Shelly Pro 2PM—a versatile, Wi-Fi-enabled energy monitoring device. In this guide, I’ll walk you through setting it up, integrating it with Home Assistant, and turning raw data into actionable insights.</description></item><item><title>HomeAssistant Air Quality Monitoring: Why PMS5003 with ESP32 is the Best Combo for 2025</title><link>https://omarghader.github.io/homeassistant-air-quality-pms5003-esp32-2025/</link><pubDate>Fri, 18 Apr 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/homeassistant-air-quality-pms5003-esp32-2025/</guid><description>HomeAssistant Air Quality Monitoring: Why PMS5003 with ESP32 is the Best Combo for 2025 Ever wondered why your allergies act up indoors or why that mysterious &amp;ldquo;musty smell&amp;rdquo; lingers? I did—until I built my own air quality monitor using a PMS5003 sensor and ESP32. In 2025, with wildfires, pollen, and urban pollution on the rise, monitoring air quality isn’t just a luxury—it’s a necessity. Here’s why this combo is unbeatable and how to set it up with HomeAssistant.</description></item><item><title>DIY Smart Door Sensor with ESP32 and Home Assistant: A Step-by-Step Guide</title><link>https://omarghader.github.io/diy-smart-door-sensor-esp32-home-assistant/</link><pubDate>Mon, 14 Apr 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/diy-smart-door-sensor-esp32-home-assistant/</guid><description>DIY Smart Door Sensor with ESP32 and Home Assistant Ever walked out the door and wondered, Did I close it? I’ve been there too—until I built a DIY smart door sensor using an ESP32 and Home Assistant. Now, my phone buzzes if the door’s left ajar, and I’ve even set up automations to turn off the AC when the door’s open for too long (goodbye, wasted energy!). Here’s how you can build your own.</description></item><item><title>Control an IR Remote AC Using ESP32 and Home Assistant</title><link>https://omarghader.github.io/control-ir-ac-esp32-home-assistant/</link><pubDate>Sun, 13 Apr 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/control-ir-ac-esp32-home-assistant/</guid><description>Control an IR Remote AC Using ESP32 and Home Assistant Ever wished your dumb air conditioner could join your smart home party? I did—especially during a heatwave when I realized I’d left the AC on full blast while away. Enter the ESP32, a $5 microcontroller that (with some tinkering) can emulate your AC’s IR remote and integrate it into Home Assistant. Here’s how I did it.
What You’ll Need Hardware:
ESP32-DevKit board: Buy it here
IR receiver/sender module VS1838B &amp;#43; IR LED: Buy it here
Breadboard and jumper wires USB cable for power/flashing Software: Home Assistant (installed and running) ESPHome (via Home Assistant Add-on) Pro Tip: Test your IR LED before wiring—some have narrow angles.</description></item><item><title>Automate Your Garden Watering with ESP32 and Home Assistant</title><link>https://omarghader.github.io/automate-your-garden-watering-esp32-home-assitantant/</link><pubDate>Sat, 12 Apr 2025 00:00:00 +0000</pubDate><guid>https://omarghader.github.io/automate-your-garden-watering-esp32-home-assitantant/</guid><description>Automate Your Garden Watering with ESP32 and Home Assistant Ever forgotten to water your plants only to find them looking like they’ve been on a desert trek? I have—more times than I’d like to admit. That’s why I built a smart garden watering system using an ESP32, soil moisture sensors, and Home Assistant. Now, my plants get watered automatically, and I get to pretend I’ve got a green thumb. Here’s how you can do it too.</description></item></channel></rss>